version: "3.7"
services:
  localstack:
    image: localstack/localstack
    container_name: localstack
    environment:
      - SERVICES=s3,dynamodb
      - AWS_DEFAULT_REGION=eu-west-1
      - HOSTNAME_EXTERNAL=localstack
      - HOSTNAME=localstack
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
    ports:
      - "4572:4572"
      - "4569:4569"
  aws-cli:
    container_name: aws-cli
    image: mesosphere/aws-cli
    volumes:
      - ./../script:/script
    environment:
      - AWS_DEFAULT_REGION=eu-west-1
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_ACCESS_KEY_ID=test
    entrypoint: /script/aws.sh
    depends_on:
      - localstack
  dd-agent:
    container_name: dd-agent
    image: datadog/agent:latest
    ports:
      - "8126:8126"
    environment:
      - DD_AC_EXCLUDE=image:.*
      - DD_AC_INCLUDE=image:gbgplc.*
      - DD_APM_ENV=test
      - DD_API_KEY={}
      - DD_TAGS=platform:Frog,env:test,type:service
      - DD_PROCESS_AGENT_ENABLED=true
      - DD_DOGSTATSD_NON_LOCAL_TRAFFIC=true
      - DD_APM_ENABLED=true
      - DD_APM_NON_LOCAL_TRAFFIC=true
      - DD_LOG_LEVEL=info
      - DD_HOSTNAME=datadoghq.eu
      - DD_SITE=datadoghq.eu
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
  applicationmonitoring:
    container_name: applicationmonitoring
    image: gbgplc-docker-development.jfrog.io/applicationmonitoring:1.1.16  # use the latest version, artifactory doesn't yet allow :latest
    environment:
      - DATADOG_APIKEY={}
      - DATADOG_ENDPOINT=tcp-intake.logs.datadoghq.eu                       # currently US endpoints! NOT EU! @see https://docs.datadoghq.com/logs/?tab=ussite#datadog-logs-endpoints
      - DATADOG_PORT=443
      - SERVICE_OWNER=fozzie
      - SERVICE_VERSION=2
      - FLUENTD_LOGLEVEL_SYSTEM=trace
      - FLUENTD_LOGLEVEL_DuATADOG=info
      - ENVIRONMENT=test
      - SERVICE_NAME=verifydocumentdevelopment
      - DD_AGENT_HOST=dd-agent
      - DD_ENV=staging
      - DD_LOGS_INJECTION=true
      - DD_SERVICE_NAME=verifydocumentdevelopment
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_AGENT_URL=http://dd-agent:8126
      - DD_TRACE_DEBUG=true
      - DD_TRACE_ENABLED=true
      - DD_TRACE_GLOBAL_TAGS=env:test
      - DD_TRACE_HEADER_TAGS=gbg-correlation-id:gbg-correlation-id
      - DD_TRACE_LOG_PATH=/var/log/datadog/dotnet-profiler.log
    ports:
      - "24224:24224"
  verifydocumentapi:
    container_name: apiService
    build:
      target: final # use dev to have access to remote debugger, final otherwise
      args:
        RELEASETYPE: "Debug"
      context: ./../
      dockerfile: src/VerifyDocumentAPI/Dockerfile
    environment:
      - DataAccessSettings__DevelopmentSecretKey=test
      - DataAccessSettings__DevelopmentAccessKeyId=test
      - AWS_DEFAULT_REGION=eu-west-1
      - ASPNETCORE_ENVIRONMENT=Development
      - DataAccessSettings__DynamoDbEndpointUri=http://localstack:4569
      - VERSION=1.0.dev
      - LOGGING_HOST=applicationmonitoring
      - DD_AGENT_HOST=dd-agent
      - DD_ENV=test
      - DD_LOGS_INJECTION=true
      - DD_SERVICE_NAME=test
      - DD_TRACE_AGENT_PORT=8126
      - DD_TRACE_AGENT_URL=http://dd-agent:8126
      - DD_TRACE_DEBUG=true
      - DD_TRACE_ENABLED=true
      - DD_TRACE_GLOBAL_TAGS=env:staging
      - DD_TRACE_HEADER_TAGS=gbg-correlation-id:gbg-correlation-id
      - DD_TRACE_LOG_PATH=/var/log/datadog/dotnet-profiler.log
      - FLUENTD_HOST=applicationmonitoring
      - FLUENTD_INTERVAL=5
      - FLUENTD_LOGLEVEL_DATADOG=warn
      - FLUENTD_LOGLEVEL_SYSTEM=info
      - FLUENTD_PORT=24224
      - FLUENTD_RETRIES=3
    volumes:
      - type: bind
        source: ../src
        target: /src/src
    ports:
      - 1990:80
    depends_on:
      - aws-cli
